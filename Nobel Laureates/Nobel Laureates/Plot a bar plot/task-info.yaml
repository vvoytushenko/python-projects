type: edu
files:
- name: main.py
  visible: true
  text: |-
    import pandas as pd
    import os
    import requests

    if __name__ == '__main__':
        if not os.path.exists('../Data'):
            os.mkdir('../Data')

        # Download data if it is unavailable.
        if 'Nobel_laureates.json' not in os.listdir('../Data'):
            print('Nobel_laureates.json')
            url = "https://www.dropbox.com/s/m6ld4vaq2sz3ovd/nobel_laureates.json?dl=1"
            r = requests.get(url, allow_redirects=True)
            with open('../Data/Nobel_laureates.json', 'wb') as f:
                f.write(r.content)
            print('Loaded.')

        df = pd.read_json('../Data/Nobel_laureates.json')
        # Check for duplicates
        print(df.duplicated().any())

        # Drop missing gender values
        df = df.dropna(subset='gender').reset_index(drop=True)

        # Print the first 20 rows of the country and name columns
        print(df[['country', 'name']].head(20).to_dict())
  learner_created: false
- name: test/__init__.py
  visible: false
  learner_created: false
- name: test/tests.py
  visible: false
  text: |
    from hstest import PlottingTest, WrongAnswer, dynamic_test, TestedProgram, CheckResult

    dict_img1_data_CORRECT = {
        "male_yaxis": [194, 69, 107, 78, 218, 198],
        "female_yaxis": [4, 1, 15, 14, 4, 13]}


    class Bar(PlottingTest):

        @dynamic_test
        def test(self):
            pr = TestedProgram()
            pr.start()

            all_figures = self.all_figures()
            if len(all_figures) == 0:
                raise WrongAnswer("Looks like you didn't present any plots")
            if len(all_figures) != 2:
                raise WrongAnswer(f"Expected one image of gender distribution across Nobel prize categories")
            graph1_type, graph2_type = all_figures[0].type, all_figures[1].type

            if graph1_type != "bar" or graph2_type != "bar":
                raise WrongAnswer("The type of the graph is wrong. The bar plot is expected.")

            graph1_data_x, graph1_data_y = all_figures[0].data.x.tolist(), all_figures[0].data.y.tolist()
            graph2_data_x, graph2_data_y = all_figures[1].data.x.tolist(), all_figures[1].data.y.tolist()

            if not ((set(graph1_data_y) == set(dict_img1_data_CORRECT["male_yaxis"]) and
                     set(graph2_data_y) == set(dict_img1_data_CORRECT["female_yaxis"]))
                    or set((graph1_data_y) == set(dict_img1_data_CORRECT["female_yaxis"])
                    and set(graph2_data_y) == set(dict_img1_data_CORRECT["male_yaxis"]))):

                raise WrongAnswer("Wrong y-axis data. The number of female and male Nobel laureates in each category is expected.")

            return CheckResult.correct()


    if __name__ == '__main__':
        Bar().run_tests()
  learner_created: false
feedback_link: https://hyperskill.org/projects/302/stages/1702/implement#comment
status: Solved
feedback:
  message: Congratulations!
  time: "Thu, 23 Feb 2023 16:13:31 UTC"
record: 5
